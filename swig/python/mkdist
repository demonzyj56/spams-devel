#!/bin/bash
case $1 in -x) set -x;shift;;esac
# The main version number is in ../Version

die () {
    echo $*
    exit 1
}

usage() {
    echo "Usage: $0 [-h] [-f] [-py3] [-m <mode>]"
    echo " prepare a spams-python/ for distribution in ./dist/"
    echo "  -h : show help"
    echo "  -f : do not rebuild the doc from scratch"
    echo "  -py3 : for python3 compatibility (to do in swig/python3 directory)"
    echo "  -m <mode>: building mode (standard, pypi, pypi_mkl or anaconda), default is standard"
    exit 1
}

check_mode() {
    case $MODE in
        standard|pypi|pypi_mkl|anaconda) ;;
        *) echo "Issue with -m <mode>: <mode> should be 'standard', 'pypi', 'pypi_mkl' or 'anaconda'" && echo "Example: $0 -m standard" && die;;
    esac
}

[ ! $# -gt 0 ] && usage && die

rmdoc=1
PYTHON=$(which python2)
MODE="standard"
while [ $# -gt 0 ]; do
    case $1 in
        -h) usage; die;;
        -f) rmdoc=0;;
        -py3) PYTHON=$(which python3); if [ -z $PYTHON ]; then PYTHON=$(which python); fi;;
        -m) shift; MODE=$1 && check_mode;;
    esac
    shift
done

WDIR=$(pwd)
CP=/bin/cp
MV=/bin/mv
RM=/bin/rm

case $MODE in
    standard) MODE_OPT="";;
    pypi) MODE_OPT=".pypi";;
    pypi_mkl) MODE_OPT=".pypi_mkl";;
    anaconda) MODE_OPT=".anaconda";;
esac

[ -x ./mkdist ] || die "You must be in the directory containing mkdist"
[ -x ../mkRelease ] || die "No prog ../mkRelease"
[ -x ../setRelease ] || die "No prog ../setRelease"
fullvers=`../mkRelease -f`
echo "${fullvers}" > Release-name

../setRelease setup.py.in${MODE_OPT} > setup.py

../setRelease README${MODE_OPT}.md > README
../setRelease INSTALL-package.in${MODE_OPT}.md > INSTALL-package
../setRelease INSTALL-windows.in.md > INSTALL-windows

PY_OPT=""
# if [[ $PYTHON =~ "python3" ]];
# then
#     PY_OPT="-py3"
# fi

name=spams
/bin/rm -rf dist

## create copy of license file
$CP $(readlink COPYING) LICENSE.txt

## create of copy of ../spams.h
$MV ${name}.h ${name}.h.bak
$CP $(readlink ${name}.h.bak) $WDIR

## generate interface
SWIG=swig
$SWIG -c++ $PY_OPT -python -DWINDOWS -o ${name}_wrap-windows.cpp ${name}.i
patch -i ${name}_wrap-windows.cpp.patch ${name}_wrap-windows.cpp
$SWIG -c++ $PY_OPT -python -o ${name}_wrap.cpp ${name}.i
patch -i ${name}_wrap.cpp.patch ${name}_wrap.cpp

## generate doc
./docmatlab2python ./${name}
$MV ${name}.py ${name}.py.bak
$MV ${name}.new.py ${name}.py

[ $rmdoc -ne 0 ] && /bin/rm -rf tmp-doc
../mkdoc -x
src_doc=tmp-doc
doc=doc
mkdir -p ${doc}/sphinx
cp -a ${src_doc}/build/html/* ${doc}/sphinx
cp -a ${src_doc}/html ${doc}
cp -p ${src_doc}/doc_spams.pdf ${doc}
cp -p ${src_doc}/build/latex/SPAMS.pdf ${doc}/python-interface.pdf

## generate the package
$PYTHON setup.py sdist
ERR=$?
[ $ERR -eq 0 ] || echo "setup error"


$RM ${name}.h
$MV ${name}.h.bak ${name}.h
$RM ${name}.py
$MV ${name}.py.bak ${name}.py

[ $ERR -eq 0 ] || die "setup error; cannot continue"

cd dist
tar zxf *.tar.gz

package_name=spams-python
tgz=${package_name}${MODE_OPT}-${fullvers}.tar.gz
cp ${name}-$(cat ../../Version).tar.gz $tgz
mv $tgz ../../../

cd $WDIR

exit 0
